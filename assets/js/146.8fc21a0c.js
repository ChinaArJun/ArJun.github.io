(window.webpackJsonp=window.webpackJsonp||[]).push([[146],{700:function(n,e,t){"use strict";t.r(e);var c=t(44),o=Object(c.a)({},(function(){var n=this.$createElement,e=this._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[e("p",[this._v("使用标准方式登录 Linux 实例（推荐）。\n依次执行以下命令，添加 yum 源。\nyum update\nyum install epel-release -y\nyum clean all\nyum list\n执行以下命令，安装 Docker。\nyum install docker-io -y\n执行以下命令，运行 Docker。\nsystemctl start docker\n执行以下命令，检查安装结果。\ndocker info\n返回如下信息，即表示安装成功。")]),this._v(" "),e("p",[this._v("使用 Docker\nDocker 的基本使用命令如下：")]),this._v(" "),e("p",[this._v("管理 Docker 守护进程。\n运行 Docker 守护进程：\nsystemctl start docker\n停止 Docker 守护进程：\nsystemctl stop docker\n重启 Docker 守护进程：\nsystemctl restart docker\n管理镜像。本文以 Docker Hub 的 Nginx 镜像为例。\ndocker pull nginx\n修改标签：您可以修改镜像标签以便记忆区分。\ndocker tag docker.io/nginx:latest tencentyun/nginx:v1\n查看已有镜像：\ndocker images\n强制删除镜像：\ndocker rmi -f tencentyun/nginx:v1\n管理容器。\n进入容器：\ndocker run -it ImageId /bin/bash\n其中，ImageId 可通过执行 docker images 命令获取。\n退出容器：执行 exit 命令，退出当前容器。\n进入后台运行的容器：\ndocker exec -it 容器 ID /bin/bash\n将容器做成镜像：\ndocker commit <容器 ID 或容器名> [<仓库名>[:<标签>]]\n例如：\ndocker commit 1c23456cd7**** tencentyun/nginx:v2\n制作镜像\n执行以下命令，打开 Dockerfile 文件。\nvim Dockerfile\n按 i 切换至编辑模式，添加如下内容。\nFROM tencentyun/nginx:v2  #声明基础镜像来源。\nMAINTAINER DTSTACK #声明镜像拥有者。\nRUN mkdir /dtstact # RUN 后面接容器运行前需要执行的命令，由于 Dockerfile 文件不能超过127行，因此当命令较多时建议写到脚本中执行。\nENTRYPOINT ping https://cloud.tencent.com/ #开机启动命令，此处最后一个命令需要是可在前台持续执行的命令，否则容器后台运行时会因为命令执行完而退出。\n按 Esc，输入 :wq，保存文件并返回。\n执行以下命令，构建镜像。\ndocker build -t nginxos:v1 .  #.是 Dockerfile 文件的路径，不能忽略。\n执行以下命令，查看镜像是否创建成功。\ndocker images\n依次执行以下命令，运行容器并查看容器。\ndocker run -d nginxos:v1         #后台运行容器。\ndocker ps                        #查看当前运行中的容器。\ndocker ps -a                     #查看所有容器，包括未运行中的。\ndocker logs CONTAINER ID/IMAGE   #如未查看到刚才运行的容器，则用容器 ID 或者名字查看启动日志排错。\n依次执行以下命令，制作镜像。\ndocker commit fb2844b6**** nginxweb:v2 #commit 参数后添加容器 ID 和构建新镜像的名称和版本号。\ndocker images                    #列出本地（已下载的和本地创建的）镜像。\n执行以下命令，将镜像推送至远程仓库。\n默认推送到 Docker Hub。您需要先登录 Docker，为镜像绑定标签，将镜像命名为 Docker 用户名/镜像名:标签的格式，最终完成推送。\ndocker login #执行后输入镜像仓库用户名及密码\ndocker tag [镜像名]:[标签] [用户名]:[标签]\ndocker push [用户名]:[标签]\n推送完成后，即可使用浏览器登录 Docker Hub 官网进行查看。")])])}),[],!1,null,null,null);e.default=o.exports}}]);